@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model AlphaForums.Models.PostViewModels.PostIndexModel

<div class="container body-content">
    <div class="row postHeader">
        <div class="postHeading">
            <span class="postIndexTitle text-bold">
                @Model.Title
            </span>

            <span id="headingBtn" class="ms-2">
                <a asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.ForumId" class="btn btn-back">
                    Back to @Model.ForumName
                </a>
            </span>

            @if (@Model.IsAuthor)
            {
                <span class="f-right ms-2">
                    <a class="btn btn-delete" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
                        Delete
                    </a>
                    <div class="modal fade text-dark" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5 text-bold" id="confirmDeleteLabel">Confirm delete</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    Do you want delete this post?
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <a asp-controller="Post" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </span>
                <span class="f-right">
                    <a asp-controller="Post" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-edit ">
                        Edit
                    </a>
                </span>
            }
        </div>
    </div>


    <div class="row" id="postIndexContent">
        <div class="col-md-3 postAuthorContainer">
            <div class="postAuthorImage" style="background-image: url('@Model.AuthorImageUrl')"></div>
            <a asp-controller="Profile" asp-action="Detail" asp-route-id="@Model.AuthorId" class="authorName">
                @Model.AuthorName
            </a>
            <span class="postData">@Model.Created</span>


        </div>
        <div class="col-md-9 postContentContainer">
            <div class="postContent">
                @Html.Raw((Model.PostContent))
            </div>
        </div>
    </div>

    <div class="row mb-3" id="replyDivider"></div>
    @if (User.Identity?.IsAuthenticated == true)
    {
        <div class="row">
            <span class="replyBar">
                <a asp-controller="Reply" asp-action="Create" asp-route-id="@Model.Id" class="btn btn-newReply">
                    Post Reply
                </a>
            </span>

        </div>
    }

    @if (Model.Replies.Any())
    {
        @foreach (var reply in Model.Replies)
        {
            <div class="row replyContent">
                <div class="col-md-3 replyAuthorContainer">
                    <div class="postAuthorImage" style="background-image: url(@reply.AuthorImageUrl)"></div>
                    <a asp-controller="Profile" asp-action="Detail" asp-route-id="@reply.AuthorId" class="authorName">
                        @reply.AuthorName
                    </a>

                    <span class="postData">@reply.Created</span>
                </div>
                <div class="col-md-9 replyContentContainer">
                    <div class="postContent">
                        @Html.Raw(reply.ReplyContent)
                    </div>
                </div>
            </div>
            
        }
        <div class="row">
            <div class="p-0 mt-2">
                @Html.PagedListPager(Model.Replies, page =>
                        Url.Action("Index", new { Model.Id, page, pageSize = ViewBag.pageSize }),
                    new PagedListRenderOptions
                    {
                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" }
                    }
                )
            </div>

        </div>
    }
    else
    {
        <div class="noPosts">
            <h5>There are no replies to this.<br/></h5>
        </div>
    }
</div>